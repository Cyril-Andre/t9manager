// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using t9n.DAL;

#nullable disable

namespace t9n.DAL.Migrations
{
    [DbContext(typeof(t9nDbContext))]
    [Migration("20220520071412_Initialization")]
    partial class Initialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DbTenantDbUser", b =>
                {
                    b.Property<Guid>("TenantsTenantInternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersUserInternalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TenantsTenantInternalId", "UsersUserInternalId");

                    b.HasIndex("UsersUserInternalId");

                    b.ToTable("DbTenantDbUser");
                });

            modelBuilder.Entity("t9n.DAL.DbArbResourceEntry", b =>
                {
                    b.Property<Guid>("EntryInternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContextId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DescriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntryCollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ScreenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SourceTextId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntryInternalId");

                    b.HasIndex("ContextId");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("EntryCollectionId");

                    b.HasIndex("ScreenId");

                    b.HasIndex("SourceTextId");

                    b.HasIndex("TypeId");

                    b.ToTable("ArbEntry");
                });

            modelBuilder.Entity("t9n.DAL.DbArbResourceEntryAttribute", b =>
                {
                    b.Property<Guid>("AttributeInternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttributeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttributeInternalId");

                    b.ToTable("ArbEntryAttribute");
                });

            modelBuilder.Entity("t9n.DAL.DbArbResourceEntryCollection", b =>
                {
                    b.Property<Guid>("CollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locale")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CollectionId");

                    b.ToTable("ArbEntryCollection");
                });

            modelBuilder.Entity("t9n.DAL.DbInvitation", b =>
                {
                    b.Property<Guid>("InvitationInternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantInternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvitationInternalId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("t9n.DAL.DbTenant", b =>
                {
                    b.Property<Guid>("TenantInternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdminUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantInternalId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("t9n.DAL.DbUser", b =>
                {
                    b.Property<Guid>("UserInternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetPasswordOtp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserBirthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UserEmailValidated")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserInternalId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DbTenantDbUser", b =>
                {
                    b.HasOne("t9n.DAL.DbTenant", null)
                        .WithMany()
                        .HasForeignKey("TenantsTenantInternalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("t9n.DAL.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UsersUserInternalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("t9n.DAL.DbArbResourceEntry", b =>
                {
                    b.HasOne("t9n.DAL.DbArbResourceEntryAttribute", "Context")
                        .WithMany()
                        .HasForeignKey("ContextId");

                    b.HasOne("t9n.DAL.DbArbResourceEntryAttribute", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId");

                    b.HasOne("t9n.DAL.DbArbResourceEntryCollection", "EntryCollection")
                        .WithMany("ArbEntries")
                        .HasForeignKey("EntryCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("t9n.DAL.DbArbResourceEntryAttribute", "Screen")
                        .WithMany()
                        .HasForeignKey("ScreenId");

                    b.HasOne("t9n.DAL.DbArbResourceEntryAttribute", "SourceText")
                        .WithMany()
                        .HasForeignKey("SourceTextId");

                    b.HasOne("t9n.DAL.DbArbResourceEntryAttribute", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Context");

                    b.Navigation("Description");

                    b.Navigation("EntryCollection");

                    b.Navigation("Screen");

                    b.Navigation("SourceText");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("t9n.DAL.DbArbResourceEntryCollection", b =>
                {
                    b.Navigation("ArbEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
